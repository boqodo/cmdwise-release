name: Build and Sign macOS Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag to build (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout private repo
        uses: actions/checkout@v3
        with:
          repository: boqodo/cmdwise
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          ref: ${{ github.event.inputs.tag }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm install
      
      - name: Prepare certificates
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        run: |
          echo "Preparing certificates..."
          mkdir -p ~/certs
          echo "$APPLE_CERTIFICATE" | base64 --decode > ~/certs/dev-cert.p12
          security create-keychain -p "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" build.keychain
          security import ~/certs/dev-cert.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" build.keychain
          echo "Certificates prepared successfully"
      
      - name: Debug environment variables
        run: |
          echo "APPLE_ID is set: ${{ secrets.APPLE_ID != '' }}"
          echo "APPLE_PASSWORD is set: ${{ secrets.APPLE_PASSWORD != '' }}"
          echo "APPLE_TEAM_ID is set: ${{ secrets.APPLE_TEAM_ID != '' }}"
      
      - name: Build and Sign for macOS
        run: |
          echo "Starting build and sign process..."
          export DEBUG=electron-notarize,electron-notarize:apple-notarytool
          npm run dist:macos
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ~/certs/dev-cert.p12
          CSC_KEY_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      
      - name: Cleanup
        if: always()
        run: |
          security delete-keychain build.keychain
          rm -rf ~/certs
      
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          artifacts: "release/*.dmg,release/*.zip"
          body: |
            ## 安装说明
            
            已经过 Apple 签名和公证，可以直接打开使用。
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
